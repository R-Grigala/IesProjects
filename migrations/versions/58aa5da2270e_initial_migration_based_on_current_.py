"""Initial migration based on current database

Revision ID: 58aa5da2270e
Revises: b9498a06990c
Create Date: 2024-10-09 09:54:18.763535

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '58aa5da2270e'
down_revision = 'b9498a06990c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('projects_name', sa.String(length=255), nullable=False),
    sa.Column('contract_number', sa.String(length=255), nullable=True),
    sa.Column('start_time', sa.Date(), nullable=False),
    sa.Column('end_time', sa.Date(), nullable=False),
    sa.Column('contractor', sa.String(length=255), nullable=True),
    sa.Column('proj_location', sa.String(length=255), nullable=False),
    sa.Column('proj_latitude', sa.Float(), nullable=False),
    sa.Column('proj_longitude', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('can_users', sa.Boolean(), nullable=True),
    sa.Column('can_project', sa.Boolean(), nullable=True),
    sa.Column('can_geophysic', sa.Boolean(), nullable=True),
    sa.Column('can_geologic', sa.Boolean(), nullable=True),
    sa.Column('can_hazard', sa.Boolean(), nullable=True),
    sa.Column('can_geodetic', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('geological',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('geological_survey', sa.Boolean(), nullable=False),
    sa.Column('objects_number', sa.Integer(), nullable=False),
    sa.Column('boreholes', sa.Boolean(), nullable=False),
    sa.Column('boreholes_number', sa.Integer(), nullable=False),
    sa.Column('pits', sa.Boolean(), nullable=False),
    sa.Column('pits_number', sa.Integer(), nullable=False),
    sa.Column('laboratory_tests', sa.Boolean(), nullable=False),
    sa.Column('points_number', sa.Integer(), nullable=False),
    sa.Column('archival_material', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geophysical',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('vs30', sa.Integer(), nullable=False),
    sa.Column('ground_category_geo', sa.String(length=255), nullable=False),
    sa.Column('ground_category_euro', sa.String(length=255), nullable=False),
    sa.Column('archival_excel', sa.String(length=255), nullable=True),
    sa.Column('archival_pdf', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path', sa.String(length=255), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('lastname', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('_password', sa.String(length=255), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('geophysic_electrical',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('geophysical_id', sa.Integer(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('profile_length', sa.Float(), nullable=False),
    sa.Column('archival_img', sa.String(length=255), nullable=True),
    sa.Column('archival_excel', sa.String(length=255), nullable=True),
    sa.Column('archival_pdf', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['geophysical_id'], ['geophysical.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geophysic_georadar',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('geophysical_id', sa.Integer(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('profile_length', sa.Float(), nullable=False),
    sa.Column('archival_img', sa.String(length=255), nullable=True),
    sa.Column('archival_excel', sa.String(length=255), nullable=True),
    sa.Column('archival_pdf', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['geophysical_id'], ['geophysical.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geophysic_logging',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('geophysical_id', sa.Integer(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('profile_length', sa.Float(), nullable=False),
    sa.Column('archival_img', sa.String(length=255), nullable=True),
    sa.Column('archival_excel', sa.String(length=255), nullable=True),
    sa.Column('archival_pdf', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['geophysical_id'], ['geophysical.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geophysic_seismic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('geophysical_id', sa.Integer(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('profile_length', sa.Float(), nullable=False),
    sa.Column('vs30', sa.Integer(), nullable=False),
    sa.Column('ground_category_geo', sa.String(length=255), nullable=False),
    sa.Column('ground_category_euro', sa.String(length=255), nullable=False),
    sa.Column('archival_img', sa.String(length=255), nullable=True),
    sa.Column('archival_excel', sa.String(length=255), nullable=True),
    sa.Column('archival_pdf', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['geophysical_id'], ['geophysical.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('geophysic_seismic')
    op.drop_table('geophysic_logging')
    op.drop_table('geophysic_georadar')
    op.drop_table('geophysic_electrical')
    op.drop_table('users')
    op.drop_table('images')
    op.drop_table('geophysical')
    op.drop_table('geological')
    op.drop_table('roles')
    op.drop_table('project')
    # ### end Alembic commands ###
